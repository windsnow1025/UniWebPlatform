name: ci

on:
  push:
    branches:
      - "main"

jobs:
  build-nginx:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'nginx/')
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest

  build-mysql:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'mysql/')
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./mysql
          file: ./mysql/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mysql:latest

  build-next:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'next/')
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./next
          file: ./next/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/next:latest

  build-node:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'node/')
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./node
          file: ./node/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node:latest

  build-fastapi:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'fastapi/')
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./fastapi
          file: ./fastapi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi:latest
